# 1 "scanner.mll"
  open Parser 
# 4 "scanner.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\204\255\078\000\192\000\024\001\153\000\033\001\003\000\
    \056\001\007\000\001\000\088\001\096\001\007\000\122\001\002\000\
    \018\000\153\001\008\000\144\001\002\000\003\000\241\255\012\001\
    \243\255\016\000\245\255\246\255\247\255\248\255\249\255\250\255\
    \251\255\252\255\020\000\011\000\255\255\254\255\238\255\239\255\
    \162\001\206\255\237\255\236\255\208\255\178\000\026\000\233\255\
    \232\255\012\000\055\000\003\000\063\000\067\000\231\255\226\255\
    \230\255\065\000\063\000\071\000\228\255\065\000\060\000\227\255\
    \086\000\101\000\218\255\094\000\088\000\104\000\220\255\108\000\
    \142\000\130\000\223\255\133\000\145\000\130\000\134\000\147\000\
    \224\255\171\000\153\000\215\255\155\000\170\000\171\000\175\000\
    \222\255\187\000\178\000\217\255\171\000\209\255\173\000\210\000\
    \206\000\214\000\221\255\209\000\210\000\028\001\222\000\001\001\
    \219\255\251\000\003\001\210\255\012\001\014\001\213\255\025\001\
    \012\001\023\001\043\001\038\001\052\001\034\001\034\001\038\001\
    \052\001\212\255\055\001\047\001\042\001\054\001\050\001\044\001\
    \061\001\216\255\061\001\214\255\044\001\051\001\063\001\084\001\
    \078\001\093\001\075\001\075\001\079\001\093\001\211\255\204\001\
    \207\255\228\001\153\001\254\255\255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\047\000\049\000\049\000\255\255\
    \047\000\255\255\255\255\047\000\047\000\255\255\047\000\255\255\
    \255\255\047\000\255\255\047\000\021\000\020\000\255\255\013\000\
    \255\255\011\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\002\000\015\000\255\255\255\255\255\255\255\255\
    \049\000\255\255\255\255\255\255\255\255\047\000\255\255\255\255\
    \255\255\255\255\255\255\026\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\030\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\050\000\255\255\255\255\255\255";
  Lexing.lex_default =
   "\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\255\255\255\255\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \000\000\255\255\255\255\255\255\000\000\255\255\255\255\000\000\
    \255\255\255\255\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\147\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\036\000\036\000\000\000\000\000\036\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \036\000\034\000\003\000\052\000\000\000\000\000\000\000\000\000\
    \033\000\032\000\022\000\024\000\027\000\023\000\026\000\035\000\
    \006\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\037\000\000\000\021\000\025\000\020\000\043\000\
    \042\000\019\000\011\000\008\000\004\000\017\000\014\000\004\000\
    \132\000\016\000\057\000\007\000\100\000\039\000\013\000\018\000\
    \099\000\038\000\012\000\010\000\009\000\094\000\068\000\015\000\
    \056\000\101\000\048\000\029\000\067\000\028\000\047\000\050\000\
    \055\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\031\000\051\000\030\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \053\000\054\000\058\000\059\000\060\000\064\000\063\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\065\000\066\000\071\000\069\000\070\000\072\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\073\000\074\000\076\000\081\000\078\000\
    \079\000\077\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\080\000\144\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\044\000\045\000\082\000\083\000\092\000\089\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\087\000\088\000\090\000\091\000\093\000\095\000\
    \001\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\096\000\097\000\098\000\111\000\108\000\
    \105\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\045\000\041\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\104\000\106\000\
    \107\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\143\000\143\000\143\000\143\000\143\000\143\000\143\000\
    \143\000\143\000\143\000\045\000\109\000\110\000\112\000\113\000\
    \114\000\102\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\103\000\115\000\045\000\116\000\117\000\118\000\119\000\
    \120\000\121\000\045\000\045\000\130\000\124\000\125\000\126\000\
    \127\000\128\000\129\000\131\000\122\000\133\000\134\000\123\000\
    \135\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\084\000\045\000\136\000\137\000\045\000\138\000\139\000\
    \140\000\141\000\142\000\148\000\000\000\075\000\000\000\086\000\
    \000\000\000\000\085\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\044\000\045\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\045\000\061\000\045\000\000\000\000\000\000\000\
    \000\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\062\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\045\000\000\000\046\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\049\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\045\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\045\000\143\000\143\000\143\000\143\000\
    \143\000\143\000\143\000\143\000\143\000\143\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\045\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\051\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\035\000\255\255\000\000\000\000\000\000\020\000\
    \021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \007\000\000\000\015\000\000\000\009\000\025\000\000\000\000\000\
    \009\000\034\000\000\000\000\000\000\000\010\000\013\000\000\000\
    \016\000\009\000\018\000\000\000\013\000\000\000\046\000\049\000\
    \016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\050\000\000\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \052\000\053\000\057\000\058\000\059\000\061\000\062\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\064\000\065\000\067\000\068\000\069\000\071\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\072\000\073\000\075\000\076\000\077\000\
    \078\000\075\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\079\000\003\000\045\000\045\000\045\000\045\000\045\000\
    \045\000\045\000\045\000\005\000\081\000\082\000\084\000\085\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\086\000\087\000\089\000\090\000\092\000\094\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\095\000\096\000\097\000\099\000\100\000\
    \102\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\004\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\103\000\105\000\
    \106\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\008\000\108\000\109\000\111\000\112\000\
    \113\000\101\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
    \008\000\101\000\114\000\006\000\115\000\116\000\117\000\118\000\
    \119\000\120\000\004\000\011\000\122\000\123\000\124\000\125\000\
    \126\000\127\000\128\000\130\000\008\000\132\000\133\000\008\000\
    \134\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\011\000\008\000\135\000\136\000\014\000\137\000\138\000\
    \139\000\140\000\141\000\146\000\255\255\012\000\255\255\011\000\
    \255\255\255\255\011\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\019\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\011\000\014\000\017\000\255\255\255\255\255\255\
    \255\255\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\014\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\017\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\014\000\255\255\019\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\017\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\019\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\017\000\143\000\143\000\143\000\143\000\
    \143\000\143\000\143\000\143\000\143\000\143\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\143\000\143\000\143\000\
    \143\000\143\000\143\000\143\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\143\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\146\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 30 "scanner.mll"
               ( token lexbuf )
# 275 "scanner.ml"

  | 1 ->
# 31 "scanner.mll"
           (comment lexbuf)
# 280 "scanner.ml"

  | 2 ->
# 32 "scanner.mll"
          (EXCLAMATION)
# 285 "scanner.ml"

  | 3 ->
# 33 "scanner.mll"
          (LPAREN)
# 290 "scanner.ml"

  | 4 ->
# 34 "scanner.mll"
          (RPAREN)
# 295 "scanner.ml"

  | 5 ->
# 35 "scanner.mll"
          (LBRACE)
# 300 "scanner.ml"

  | 6 ->
# 36 "scanner.mll"
          (RBRACE)
# 305 "scanner.ml"

  | 7 ->
# 37 "scanner.mll"
          (LBRACKET)
# 310 "scanner.ml"

  | 8 ->
# 38 "scanner.mll"
          (RBRACKET)
# 315 "scanner.ml"

  | 9 ->
# 39 "scanner.mll"
          (COMMA)
# 320 "scanner.ml"

  | 10 ->
# 40 "scanner.mll"
          (DOT)
# 325 "scanner.ml"

  | 11 ->
# 42 "scanner.mll"
          (ASSIGN)
# 330 "scanner.ml"

  | 12 ->
# 43 "scanner.mll"
          (PLUS)
# 335 "scanner.ml"

  | 13 ->
# 44 "scanner.mll"
          (MINUS)
# 340 "scanner.ml"

  | 14 ->
# 45 "scanner.mll"
          (TIMES)
# 345 "scanner.ml"

  | 15 ->
# 46 "scanner.mll"
          (DIVIDE)
# 350 "scanner.ml"

  | 16 ->
# 48 "scanner.mll"
           ( EQUAL )
# 355 "scanner.ml"

  | 17 ->
# 49 "scanner.mll"
           ( NEQ )
# 360 "scanner.ml"

  | 18 ->
# 50 "scanner.mll"
           ( LEQ )
# 365 "scanner.ml"

  | 19 ->
# 51 "scanner.mll"
           ( GEQ )
# 370 "scanner.ml"

  | 20 ->
# 52 "scanner.mll"
          ( LT )
# 375 "scanner.ml"

  | 21 ->
# 53 "scanner.mll"
          ( GT )
# 380 "scanner.ml"

  | 22 ->
# 56 "scanner.mll"
            (AND)
# 385 "scanner.ml"

  | 23 ->
# 57 "scanner.mll"
           (OR)
# 390 "scanner.ml"

  | 24 ->
# 58 "scanner.mll"
                (ELSE_IF)
# 395 "scanner.ml"

  | 25 ->
# 59 "scanner.mll"
           (IF)
# 400 "scanner.ml"

  | 26 ->
# 60 "scanner.mll"
             (ELSE)
# 405 "scanner.ml"

  | 27 ->
# 61 "scanner.mll"
              (WHILE)
# 410 "scanner.ml"

  | 28 ->
# 62 "scanner.mll"
            (FOR)
# 415 "scanner.ml"

  | 29 ->
# 63 "scanner.mll"
           (IN)
# 420 "scanner.ml"

  | 30 ->
# 64 "scanner.mll"
            (NOT)
# 425 "scanner.ml"

  | 31 ->
# 65 "scanner.mll"
               (RETURN)
# 430 "scanner.ml"

  | 32 ->
# 66 "scanner.mll"
               (INT)
# 435 "scanner.ml"

  | 33 ->
# 67 "scanner.mll"
             (BOOL)
# 440 "scanner.ml"

  | 34 ->
let
# 68 "scanner.mll"
                  lxm
# 446 "scanner.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_start_pos + 6) in
# 68 "scanner.mll"
                      (STRING lxm)
# 450 "scanner.ml"

  | 35 ->
# 69 "scanner.mll"
               (NOTE)
# 455 "scanner.ml"

  | 36 ->
# 70 "scanner.mll"
               ( BLIT(true)  )
# 460 "scanner.ml"

  | 37 ->
# 71 "scanner.mll"
               ( BLIT(false) )
# 465 "scanner.ml"

  | 38 ->
# 72 "scanner.mll"
              (BREAK)
# 470 "scanner.ml"

  | 39 ->
# 73 "scanner.mll"
                 (CONTINUE)
# 475 "scanner.ml"

  | 40 ->
# 74 "scanner.mll"
               (REPEAT)
# 480 "scanner.ml"

  | 41 ->
# 76 "scanner.mll"
             (CLEF)
# 485 "scanner.ml"

  | 42 ->
# 77 "scanner.mll"
              (TEMPO)
# 490 "scanner.ml"

  | 43 ->
# 78 "scanner.mll"
                      (TIMESIGNATURE)
# 495 "scanner.ml"

  | 44 ->
# 79 "scanner.mll"
                     (KEYSIGNATURE)
# 500 "scanner.ml"

  | 45 ->
# 80 "scanner.mll"
               (TREBLE)
# 505 "scanner.ml"

  | 46 ->
# 81 "scanner.mll"
             (BASS)
# 510 "scanner.ml"

  | 47 ->
let
# 101 "scanner.mll"
              lxm
# 516 "scanner.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 101 "scanner.mll"
                  (
        (* break out prefix digits, pitch+accidental, and suffix digit *)
        let len, rest =
          let buf = Buffer.create 3 in
          let i = ref 0 in
          while !i < String.length lxm && lxm.[!i] >= '0' && lxm.[!i] <= '9' do
            Buffer.add_char buf lxm.[!i];
            incr i
          done;
          Buffer.contents buf, !i
        in
        let pitch_acc_oct = String.sub lxm rest (String.length lxm - rest)
        in
        (* if last char is digit, that’s the octave *)
        let pitch, oct_str =
          let len_pao = String.length pitch_acc_oct in
          if len_pao > 1 && pitch_acc_oct.[len_pao-1] >= '1'
             && pitch_acc_oct.[len_pao-1] <= '8'
          then
            ( String.sub pitch_acc_oct 0 (len_pao-1)
            , String.make 1 pitch_acc_oct.[len_pao-1] )
          else
            ( pitch_acc_oct, "" )
        in
        let length = if len = "" then 4 else int_of_string len in
        let octave = if oct_str = "" then 4 else int_of_string oct_str in
        let n = { Ast.pitch; octave; length } in
        NOTELIT n
    )
# 548 "scanner.ml"

  | 48 ->
let
# 130 "scanner.mll"
                lxm
# 554 "scanner.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 130 "scanner.mll"
                    ( STRING lxm )
# 558 "scanner.ml"

  | 49 ->
let
# 131 "scanner.mll"
             lxm
# 564 "scanner.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 131 "scanner.mll"
                 (LITERAL (int_of_string lxm))
# 568 "scanner.ml"

  | 50 ->
let
# 132 "scanner.mll"
            lxm
# 574 "scanner.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 132 "scanner.mll"
                (ID lxm)
# 578 "scanner.ml"

  | 51 ->
# 133 "scanner.mll"
          (EOF)
# 583 "scanner.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
   __ocaml_lex_comment_rec lexbuf 146
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 137 "scanner.mll"
         ( token lexbuf )
# 595 "scanner.ml"

  | 1 ->
# 138 "scanner.mll"
        ( comment lexbuf )
# 600 "scanner.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

